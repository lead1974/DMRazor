@page "/fetchdata"

@using Telerik.Blazor.Components.Grid

@using DMRazor.Data
@using DMRazor.Data.Core.Domain.Deal
@inject DMRazor.Data.Persistance.Repositories.WeatherForecastService ForecastService

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{

    <TelerikGrid Data="@forecasts" Height="400px" Sortable="true" Pageable="true">
        <TelerikGridColumns>
            <TelerikGridColumn Field="Date">
                <Template>
                    @((context as WeatherForecast).Date.ToString("MMMM dd, yyyy"))
                </Template>
            </TelerikGridColumn>
            <TelerikGridColumn Field="TemperatureC" Title="Temp. C" />
            <TelerikGridColumn Field="Summary" />
        </TelerikGridColumns>
    </TelerikGrid>

    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    WeatherForecast[] forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
    }
}
